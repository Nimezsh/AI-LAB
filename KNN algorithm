import numpy as np
from collections import Counter
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split

def predict(X_train, y_train, X_test, k=3):
    preds = []
    for x in X_test:
        distances = np.sqrt(np.sum((X_train - x) ** 2, axis=1))
        k_labels = y_train[np.argsort(distances)[:k]]
        preds.append(Counter(k_labels).most_common(1)[0][0])
    return np.array(preds)

iris = load_iris()
X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, test_size=0.2, random_state=42)

predictions = predict(X_train, y_train, X_test, k=5)
print("Predictions:", predictions)
print("Actual:     ", y_test)
print("Accuracy:", np.mean(predictions == y_test))
